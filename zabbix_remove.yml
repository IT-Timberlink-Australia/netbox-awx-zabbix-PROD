---
- name: "Zabbix remove hosts (host-URL friendly, v4: split canonicalisation)"
  hosts: all
  connection: local
  become: false
  gather_facts: false

  vars:
    zbx_token: "{{ lookup('env','ZABBIX_API_TOKEN') }}"
    nb_token:  "{{ lookup('env','NETBOX_TOKEN') }}"
    zbx_validate_certs: "{{ (lookup('env','ZABBIX_VERIFY') | default('true')) | bool }}"
    nb_validate_certs:  "{{ (lookup('env','NETBOX_VERIFY')  | default('true')) | bool }}"
    remove_mode: "{{ lookup('env','ZBX_REMOVE_MODE') | default('disable') }}"

  tasks:
    - name: Resolve Zabbix base URL from env
      set_fact:
        _zbx_base_raw: >-
          {{
            lookup('env','ZABBIX_API_URL')
            | default(lookup('env','ZABBIX_URL'), true)
            | default(lookup('env','ZABBIX_HOST_URL'), true)
            | default('', true)
            | regex_replace('\s+$','')
          }}

    - name: Resolve NetBox base URL from env
      set_fact:
        _nb_base_raw: >-
          {{
            lookup('env','NETBOX_API')
            | default(lookup('env','NETBOX_URL'), true)
            | default(lookup('env','NETBOX_HOST_URL'), true)
            | default('', true)
            | regex_replace('\s+$','')
          }}

    - name: Canonicalise bases (strip query/fragment and trailing slash)
      set_fact:
        _zbx_base: "{{ _zbx_base_raw | regex_replace('[?#].*$','') | regex_replace('/+$','') }}"
        _nb_base:  "{{ _nb_base_raw  | regex_replace('[?#].*$','') | regex_replace('/+$','') }}"

    - name: Build effective endpoints
      set_fact:
        _zbx_api: "{{ (_zbx_base | regex_replace('/api_jsonrpc\\.php$','', ignorecase=True)) ~ '/api_jsonrpc.php' }}"
        _nb_api:  "{{ (_nb_base  | regex_replace('/api$','', ignorecase=True)) ~ '/api' }}"

    - name: Validate endpoints
      assert:
        that:
          - _zbx_base is search('^https?://')
          - _nb_base  is search('^https?://')
          - _zbx_api is search('api_jsonrpc\\.php$')
          - _nb_api  is search('/api$')
        fail_msg: >-
          Missing/invalid endpoints.
          Zabbix base='{{ _zbx_base }}' api='{{ _zbx_api }}';
          NetBox base='{{ _nb_base }}' api='{{ _nb_api }}'.
          Expected ZABBIX_* to resolve to https://.../zabbix and NETBOX_* to https://... .

    - name: Show resolved endpoints
      debug:
        msg:
          zabbix_api: "{{ _zbx_api }}"
          netbox_base_for_module: "{{ _nb_base }}"
          netbox_api_for_reference: "{{ _nb_api }}"

    - name: Determine Zabbix host name to remove
      set_fact:
        _zbx_host: >-
          {{ hostvars[inventory_hostname].zabbix_name
             | default(hostvars[inventory_hostname].name | default(inventory_hostname)) }}

    - name: Lookup host in Zabbix
      uri:
        url: "{{ _zbx_api }}"
        method: POST
        headers:
          Content-Type: "application/json"
        body_format: json
        body:
          jsonrpc: "2.0"
          method: "host.get"
          params:
            filter:
              host: ["{{ _zbx_host }}"]
          auth: "{{ zbx_token }}"
          id: 1
        return_content: true
        validate_certs: "{{ zbx_validate_certs }}"
      register: zbx_get

    - name: Extract hostid if present
      set_fact:
        _zbx_hostid: "{{ (zbx_get.json.result | first).hostid | default(omit) }}"

    - name: Skip if not found
      when: _zbx_hostid is not defined
      debug:
        msg: "Host '{{ _zbx_host }}' not found in Zabbix; nothing to do."

    - name: Disable host in Zabbix (soft removal)
      when:
        - _zbx_hostid is defined
        - remove_mode | lower == 'disable'
      uri:
        url: "{{ _zbx_api }}"
        method: POST
        headers:
          Content-Type: "application/json"
        body_format: json
        body:
          jsonrpc: "2.0"
          method: "host.update"
          params:
            hostid: "{{ _zbx_hostid }}"
            status: 1
          auth: "{{ zbx_token }}"
          id: 2
        validate_certs: "{{ zbx_validate_certs }}"

    - name: Delete host in Zabbix (hard removal)
      when:
        - _zbx_hostid is defined
        - remove_mode | lower == 'delete'
      uri:
        url: "{{ _zbx_api }}"
        method: POST
        headers:
          Content-Type: "application/json"
        body_format: json
        body:
          jsonrpc: "2.0"
          method: "host.delete"
          params: ["{{ _zbx_hostid }}"]
          auth: "{{ zbx_token }}"
          id: 3
        validate_certs: "{{ zbx_validate_certs }}"

    - name: Optional NetBox write-back (clear sync hint)
      when: hostvars[inventory_hostname].custom_fields is defined
      block:
        - name: Build writeback payload
          set_fact:
            _cf_removed: >-
              {{
                (hostvars[inventory_hostname].custom_fields | default({}))
                | combine({'zbp_sync_hint': ''}, recursive=True)
              }}

        - name: Writeback to NetBox device (if not a VM)
          when: not (hostvars[inventory_hostname].is_virtual | default(false))
          delegate_to: localhost
          netbox.netbox.netbox_device:
            netbox_url: "{{ _nb_base }}"
            netbox_token: "{{ nb_token }}"
            validate_certs: "{{ nb_validate_certs }}"
            data:
              name: "{{ hostvars[inventory_hostname].name | default(inventory_hostname) }}"
              custom_fields: "{{ _cf_removed }}"
            state: present

        - name: Writeback to NetBox VM (if virtual)
          when: hostvars[inventory_hostname].is_virtual | default(false)
          delegate_to: localhost
          netbox.netbox.netbox_virtual_machine:
            netbox_url: "{{ _nb_base }}"
            netbox_token: "{{ nb_token }}"
            validate_certs: "{{ nb_validate_certs }}"
            data:
              name: "{{ hostvars[inventory_hostname].name | default(inventory_hostname) }}"
              custom_fields: "{{ _cf_removed }}"
            state: present
