---
- name: Zabbix remove hosts (aligned with zabbix_sync envs)
  hosts: all
  connection: local
  become: false
  gather_facts: false

  vars:
    zbx_url: "{{ lookup('env','ZABBIX_API_URL') }}"
    zbx_token: "{{ lookup('env','ZABBIX_API_TOKEN') }}"
    nb_base: "{{ lookup('env','NETBOX_API') | regex_replace('/+$','') }}"
    nb_token: "{{ lookup('env','NETBOX_TOKEN') }}"
    validate_certs: false

  tasks:
    - name: Parse Zabbix URL (phase 1)
      set_fact:
        zbx_scheme_https: "{{ zbx_url | regex_search('^https://') is truthy }}"
        zbx_hostport: "{{ (zbx_url | regex_replace('^https?://','')) | regex_replace('/.*$','') }}"
        zbx_path_only: "{{ '/' ~ (zbx_url | regex_replace('^https?://[^/]+','') | regex_replace('^/+','')) }}"

    - name: Parse Zabbix URL (phase 2)
      set_fact:
        zbx_api: >-
          {{
            (zbx_url | regex_replace('/+$',''))
            | regex_replace('(?i)/api_jsonrpc\\.php$','')
            ~ '/api_jsonrpc.php'
          }}
        zbx_path_clean: "{{ zbx_path_only | regex_replace('/+$','') }}"
        _auth: "{{ zbx_token }}"

    - name: Parse Zabbix URL (phase 3)
      set_fact:
        zbx_pathroot: >-
          {{
            (zbx_path_clean | regex_replace('(?i)/api_jsonrpc\\.php$',''))
            | regex_replace('^$','/')
          }}

    - name: Determine Zabbix host name to remove
      set_fact:
        _zbx_host: >-
          {{ hostvars[inventory_hostname].zabbix_name
              | default(hostvars[inventory_hostname].name | default(inventory_hostname)) }}

    - name: Lookup host in Zabbix
      uri:
        url: "{{ zbx_url }}"
        method: POST
        headers:
          Content-Type: "application/json"
        body_format: json
        body:
          jsonrpc: "2.0"
          method: "host.get"
          params:
            filter:
              host: ["{{ _zbx_host }}"]
          auth: "{{ zbx_token }}"
          id: 1
        return_content: true
        validate_certs: "{{ validate_certs }}"
      register: zbx_get

    - name: Extract hostid if present
      set_fact:
        _zbx_hostid: "{{ (zbx_get.json.result | first).hostid | default(omit) }}"

    - name: Skip if not found
      when: _zbx_hostid is not defined
      debug:
        msg: "Host '{{ _zbx_host }}' not found in Zabbix; nothing to delete."

    - name: Delete host in Zabbix
      when: _zbx_hostid is defined
      uri:
        url: "{{ zbx_url }}"
        method: POST
        headers:
          Content-Type: "application/json"
        body_format: json
        body:
          jsonrpc: "2.0"
          method: "host.delete"
          params: ["{{ _zbx_hostid }}"]
          auth: "{{ zbx_token }}"
          id: 2
        validate_certs: "{{ validate_certs }}"

    - name: Mark as removed in NetBox (optional write-back)
      when: hostvars[inventory_hostname].custom_fields is defined
      block:
        - name: Build writeback payload (clear sync hint)
          set_fact:
            _cf_removed: >-
              {{
                (hostvars[inventory_hostname].custom_fields | default({}))
                | combine({'zbp_sync_hint': ''}, recursive=True)
              }}
        - name: Writeback to NetBox device (if not a VM)
          when: not (hostvars[inventory_hostname].is_virtual | default(false))
          delegate_to: localhost
          netbox.netbox.netbox_device:
            netbox_url: "{{ nb_base }}"
            netbox_token: "{{ nb_token }}"
            data:
              name: "{{ hostvars[inventory_hostname].name | default(inventory_hostname) }}"
              custom_fields: "{{ _cf_removed }}"
            state: present
        - name: Writeback to NetBox VM (if virtual)
          when: hostvars[inventory_hostname].is_virtual | default(false)
          delegate_to: localhost
          netbox.netbox.netbox_virtual_machine:
            netbox_url: "{{ nb_base }}"
            netbox_token: "{{ nb_token }}"
            data:
              name: "{{ hostvars[inventory_hostname].name | default(inventory_hostname) }}"
              custom_fields: "{{ _cf_removed }}"
            state: present
